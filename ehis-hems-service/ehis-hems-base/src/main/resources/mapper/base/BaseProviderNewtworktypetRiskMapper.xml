<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paic.ehis.base.mapper.BaseProviderNewtworktypetRiskMapper">
    
    <resultMap type="BaseProviderNewtworktypetRisk" id="BaseProviderNewtworktypetRiskResult">
        <result property="serNo"    column="ser_no"    />
        <result property="providerCode"    column="provider_code"    />
        <result property="networktypeCode"    column="networktype_code"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="riskCode"    column="risk_code"    />
        <result property="riskName"    column="risk_name"    />
    </resultMap>

    <sql id="selectBaseProviderNewtworktypetRiskVo">
        select ser_no, provider_code, networktype_code, status, create_by, create_time, update_by, update_time, risk_code, risk_name from base_provider_newtworktypet_risk
    </sql>

    <select id="selectBaseProviderNewtworktypetRiskList" parameterType="BaseProviderNewtworktypetRisk" resultMap="BaseProviderNewtworktypetRiskResult">
        <include refid="selectBaseProviderNewtworktypetRiskVo"/>
        <where>  
            <if test="providerCode != null  and providerCode != ''"> and provider_code = #{providerCode}</if>
            <if test="networktypeCode != null  and networktypeCode != ''"> and networktype_code = #{networktypeCode}</if>
            <if test="riskCode != null  and riskCode != ''"> and risk_code = #{riskCode}</if>
            <if test="riskName != null  and riskName != ''"> and risk_name like concat('%', #{riskName}, '%')</if>
            and status = 'Y'
        </where>
    </select>
    
    <select id="selectBaseProviderNewtworktypetRiskById" parameterType="String" resultMap="BaseProviderNewtworktypetRiskResult">
        <include refid="selectBaseProviderNewtworktypetRiskVo"/>
        where ser_no = #{serNo}
    </select>
        
    <insert id="insertBaseProviderNewtworktypetRisk" parameterType="BaseProviderNewtworktypetRisk">
        insert into base_provider_newtworktypet_risk
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="serNo != null">ser_no,</if>
            <if test="providerCode != null">provider_code,</if>
            <if test="networktypeCode != null">networktype_code,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="riskCode != null">risk_code,</if>
            <if test="riskName != null">risk_name,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="serNo != null">#{serNo},</if>
            <if test="providerCode != null">#{providerCode},</if>
            <if test="networktypeCode != null">#{networktypeCode},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="riskCode != null">#{riskCode},</if>
            <if test="riskName != null">#{riskName},</if>
         </trim>
    </insert>

    <update id="updateBaseProviderNewtworktypetRisk" parameterType="BaseProviderNewtworktypetRisk">
        update base_provider_newtworktypet_risk
        <trim prefix="SET" suffixOverrides=",">
            <if test="providerCode != null">provider_code = #{providerCode},</if>
            <if test="networktypeCode != null">networktype_code = #{networktypeCode},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="riskCode != null">risk_code = #{riskCode},</if>
            <if test="riskName != null">risk_name = #{riskName},</if>
        </trim>
        where ser_no = #{serNo}
    </update>

    <update id="deleteBaseProviderNewtworktypetRiskById" parameterType="String">
        update base_provider_newtworktypet_risk set status = 'N' where ser_no = #{serNo}
    </update>

    <delete id="deleteBaseProviderNewtworktypetRiskByCode" parameterType="String">
        delete from base_provider_newtworktypet_risk where provider_code = #{providerCode}
    </delete>

    <delete id="deleteBaseProviderNewtworktypetRiskByIds" parameterType="String">
        delete from base_provider_newtworktypet_risk where ser_no in 
        <foreach item="serNo" collection="array" open="(" separator="," close=")">
            #{serNo}
        </foreach>
    </delete>
    
</mapper>