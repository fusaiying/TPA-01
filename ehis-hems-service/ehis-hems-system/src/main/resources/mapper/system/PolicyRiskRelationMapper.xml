<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.paic.ehis.system.mapper.PolicyRiskRelationMapper">
    
    <resultMap type="PolicyRiskRelation" id="PolicyRiskRelationResult">
        <result property="relationId"    column="relation_id"    />
        <result property="policyNo"    column="policy_no"    />
        <result property="riskCode"    column="risk_code"    />
        <result property="riskName"    column="risk_name"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <sql id="selectPolicyRiskRelationVo">
        select relation_id, policy_no, risk_code, risk_name, status, create_by, create_time, update_by, update_time from policy_risk_relation
    </sql>

    <select id="selectPolicyRiskRelationList" parameterType="PolicyRiskRelation" resultMap="PolicyRiskRelationResult">
        <include refid="selectPolicyRiskRelationVo"/>
        <where>  
            <if test="policyNo != null  and policyNo != ''"> and policy_no = #{policyNo}</if>
            <if test="riskCode != null  and riskCode != ''"> and risk_code = #{riskCode}</if>
            <if test="riskName != null  and riskName != ''"> and risk_name like concat('%', #{riskName}, '%')</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectPolicyRiskRelationById" parameterType="Long" resultMap="PolicyRiskRelationResult">
        <include refid="selectPolicyRiskRelationVo"/>
        where relation_id = #{relationId}
    </select>
        
    <insert id="insertPolicyRiskRelation" parameterType="PolicyRiskRelation" useGeneratedKeys="true" keyProperty="relationId">
        insert into policy_risk_relation
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="policyNo != null and policyNo != ''">policy_no,</if>
            <if test="riskCode != null and riskCode != ''">risk_code,</if>
            <if test="riskName != null and riskName != ''">risk_name,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="policyNo != null and policyNo != ''">#{policyNo},</if>
            <if test="riskCode != null and riskCode != ''">#{riskCode},</if>
            <if test="riskName != null and riskName != ''">#{riskName},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updatePolicyRiskRelation" parameterType="PolicyRiskRelation">
        update policy_risk_relation
        <trim prefix="SET" suffixOverrides=",">
            <if test="policyNo != null and policyNo != ''">policy_no = #{policyNo},</if>
            <if test="riskCode != null and riskCode != ''">risk_code = #{riskCode},</if>
            <if test="riskName != null and riskName != ''">risk_name = #{riskName},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where relation_id = #{relationId}
    </update>

    <delete id="deletePolicyRiskRelationById" parameterType="Long">
        delete from policy_risk_relation where relation_id = #{relationId}
    </delete>

    <delete id="deletePolicyRiskRelationByIds" parameterType="String">
        delete from policy_risk_relation where relation_id in 
        <foreach item="relationId" collection="array" open="(" separator="," close=")">
            #{relationId}
        </foreach>
    </delete>
    
</mapper>